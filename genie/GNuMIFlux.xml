<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Configurations for GNuMI flux  
     Each is grouped into a <param_set> that are parsed and applied to 
     GNuMIFlux.  Elements should appear in the following order:
     <verbose> : how noisy to be while parsing <param_set>
     <units>   : sets user coordinate units (e.g. "cm", "meter", etc)
                 set this first and only once
     <beamdir> : defines the relative orientation of the beam in user coord
                 three types are currently supported:
           "series"    : a sequence of rotations around one axis at a time
                         each <rotation> needs value and attributes:
                             axis ('x','y','z') units ('deg' 'rad')
           "thetaphi3" : 3 pairs of (theta,phi) ala GEANT3
                         needs 6 values and attribute: units
           "newxyz"    : 3 direction vectors, ala Geant4
                         needs 9 values (will normalize each vector)
     <beampos> :  define the beam origin in the user coordinate system
                  3 values define the point 
                  if 6 values treat as ( user xyz ) = ( beam xyz )
                  but must have set <beamdir> first
     <window> :   define the flux window via three <point> elements
                  each <point> is a user coord (x,y,z)
     <enumax>:    set limits on the maximum enu energy:  lowlimit, fudgefactor
                  set limits on wgt: fudgefactor, # points to use
                  final reported energy is max(lowlimit,fudgefactor*enumxscan)
                  where is 'enumxscan' is the highest energy seen when 
                  scanning for x-y weights.
     <reuse>:     set # of times an entry is sequentially reused
     <upstreamz>: user coord z to push neutrino orgin to
                  if abs(z) > 1e30 then leave on the flux window 
     The units, beamdir, beampos elements define the user coordinate system 
        user_dir =  rot * beam_dir
        user_pos = (rot * beam_pos ) + user_pos_beamorigin
     If more than one <beamdir> or <beampos> is specified the last
     one of each is used.  Results of rotations from <beamdir> elements
     are not cummulative.
     Parsing of element contents w/ multiple values is liberal about
     spacing, line breaks, grouping and separating characters.
  -->

<gnumi_config>
  <param_set name="microboone-numi-v1">
    <!-- verbosity of XML parsing -->
    <verbose> 3 </verbose>
    <!-- setting user units should be first -->
    <units> m </units>
    <!-- beamdir must come before beam zero position -->
    <!-- direction of the beam in the user coordinate system -->
    <!-- beam goes up 3 degrees in the coordinate system of the FD -->
    <!-- rotation matrix created by sequence of rotations -->
    <!-- ** Single dimension at a time transformation ** -->
    <!-- <beamdir type="series">
       <rotation axis="x" units="rad"> -0.0582977560 </rotation>
       <rotation axis="y" units="rad">  0.4038688478 </rotation>
    </beamdir> -->
    <!-- ** GEANT4 Style Rotation Matrix ** -->
    <beamdir type="newxyz">
      [   0.921228671    0.0226872648   0.388359401  ]
      [   0.00136256111  0.998103714   -0.061539578  ]
      [  -0.389019125    0.0572211871   0.919450845  ]
    </beamdir>
    <!-- position of beam -->
    <!-- this is a translation from ( user coords ) to ( beam coords ) -->
    <!-- basically a statement of the origin in the detector coordinate system
         has the corresponding value in the beam coordinate system -->
    <!-- XML config must have already set the rotation matrix -->
    <!-- uboone with numi beam - this puts uboone origin at miniboone origin
         close enough for now -->
    <beampos> ( 0.0, 0.0, 0.0 ) = ( 54.499, 74.461,  677.611) </beampos>
    <!-- define flux window in detector coords -->
    <!-- need 3 positions to define a rectoid -->
    <!-- not yet support beam coords, 
         but if/when must have already specified transform -->
    <!-- make this window big enough to cover the detector, also offset it from 
         the origin towards the beam in x and y -->

    <window>
      <point coord="det"> 5, -5, -35 </point>
      <point coord="det"> -5, 2, -35 </point>
      <point coord="det"> 5, -5, 20  </point>
    </window>
    <enumax> 22. 1.05 </enumax> 
    <!--first number is estimated max energy, second is	
        scale factor to multiply max scan energy by -->
  </param_set>

  <param_set name="microboone-numi-v2">
    <verbose> 3 </verbose>
    <units> m </units>
    <beamdir type="newxyz">
      [ 0.92103853804025682       0.0227135048039241207  0.38880857519374290   ]
      [ 0.0000462540012621546684  0.99829162468141475   -0.0584279894529063024 ]
      [-0.38947144863934974       0.0538324139386641073  0.91946400794392302   ]
    </beamdir>
    <beampos> ( 0.0, 0.0, 0.0 ) = ( 55.02, 72.59,  672.70) </beampos>
    <window>
      <point coord="det"> 5, -5, -35 </point>
      <point coord="det"> -5, 2, -35 </point>
      <point coord="det"> 5, -5, 20  </point>
    </window>
    <enumax> 20. 1.05 </enumax>
    <reuse> 40 </reuse>
  </param_set>

  <param_set name="microboone-numi-v2-dirt">
    <verbose> 3 </verbose>
    <units> m </units>
    <beamdir type="newxyz">
      [ 0.92103853804025682       0.0227135048039241207  0.38880857519374290   ]
      [ 0.0000462540012621546684  0.99829162468141475   -0.0584279894529063024 ]
      [-0.38947144863934974       0.0538324139386641073  0.91946400794392302   ]
    </beamdir>
    <beampos> ( 0.0, 0.0, 0.0 ) = ( 55.02, 72.59,  672.70) </beampos>
    <window>
      <point coord="det"> -34.53616846,  21.64010314, -56.51803741 </point>
      <point coord="det"> -5.887503031, -10.29041579, -72.33150682 </point>
      <point coord="det"> -20.41730004, -13.57997006, 40.17686941  </point>
    </window>
    <enumax> 22. 1.05 </enumax>
    <reuse> 100 </reuse>
  </param_set>

</gnumi_config>
